<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>randomize();
alarm[1] = room_speed * 5;
s_ventana();
persistent = true;
draw_set_font(d_font);
with instance_create(0, 0, o_sombras) { persistent = true; }
audio_channel_num(256);
audio_listener_orientation(0, 0, 1, 0, -1, 0);
audio_falloff_set_model(audio_falloff_linear_distance_clamped);

globalvar dlt, data, seleccion, camino, mundo, pila_cadaveres, pila_craneos;
dlt = 0;
tiempo_sim = 0; // segundos de simulacion que van pasando
menu_aguja = 0; // en que avatar de la data estamos
s_data_ini();
s_colores();
seleccion = noone; // avatar seleccionado en simulacion
camino = noone; // grid para llegar al centro
mundo = noone; // grid de suelo o agua u obstaculos
pila_cadaveres = 0; // conteo muertos usuarios en campo batalla
pila_craneos = 0; // conteo muertos general en campo batalla
reloj_cam = m_cam_time_s; // cambio de camara
if file_exists("tmp.png") {
    file_delete("tmp.png");
}

// para mover camara
clicdx = 0;
clicdy = 0;

ini_open("configuracion.ini");

// traer datos de google
if os_is_network_connected() and
        date_second_span(date_current_datetime(), ini_read_real("web", "datetime", 0)) &gt;= 60 {
    ini_write_real("web", "datetime", date_current_datetime());
    http_data = http_get_file(string_replace(m_http_mask, "$$$", m_http_ind), "data.csv");
}
alarm[0] = room_speed * 3;

// parametros de simulacion
globalvar war_dialogos, war_pelea, war_stats, war_zona, war_max,
    war_fin, modo_player, war_elem, war_speed, global_gain;
war_zona = ini_read_string("menu", "zona", ""); // para seleccionar solo unos
war_camfind = ini_read_real("game", "camfind", m_cam_find_no); // forma de buscar avatar
war_camdiverso = ini_read_real("game", "camdiverso", false) == true; // busca en diferentes grupos
war_speed = max(0, ini_read_real("game", "speed", 1)); // 0:pausa, 1:normal, 1++:acelerado
war_dialogos = ini_read_real("game", "dialogos", m_chat_null); // mostrar mensajes
war_pelea = ini_read_real("menu", "pelea", m_pelea_grupos); // modalidad de conflicto
war_max = ini_read_real("menu", "max", m_jump_total * 3); // maximas unidades generadas por grupo
war_inicial = clamp(ini_read_real("menu", "inicial", 1), 0, 1); // porcentaje del maximo al inicio
war_fin = false; // ha acabado el combate
modo_player = false; // manejar unidad con controles
global_gain = true;
for (var i = 4; i &gt;= 1; i--) { // que grupos estan permitidos
    war_gen[i] = ini_read_real("menu", "gen" + string(i), true) == true;
}
war_gen[0] = ini_read_real("menu", "gen0", false) == true;
// war_stats, war_elem se ajusta en s_menu

// variables para menu
boton_txt = "";
boton_foco = m_foco_null;
reloj_menu = -1;
boton_name = ini_read_string("menu", "name", "");
reloj_slash = 0;
menu_total = 0;
menu_esweb = false;

ini_close();

// chambonadas, no modificarlas
clan = 0;
ultimitou = noone;

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="1">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>randomize();
alarm[1] = room_speed * 5;

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// abrir ini

s_data_open();
s_data_busqueda(2);
s_data_total();
audio_play_sound(a_local, 100, false);

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="1">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///tiempo

dlt = min(0.1, delta_time * 0.000001) * war_speed;
depth = -mouse_y;
if room == w_mundo and !war_fin {
    tiempo_sim += dlt;
}

</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///comandos menu

if room == w_menu { // inicio

boton_txt = ""; // limpiar

// cambiar al azar
if reloj_menu != -1 {
    reloj_menu -= dlt;
    if reloj_menu &lt;= 0 {
        reloj_menu = m_jump_time_s;
        s_data_busqueda(2);
    }
}

// parpadeo slash
reloj_slash -= dlt;
if reloj_slash &lt;= 0 {
    reloj_slash += 0.5;
}

// teclas
if keyboard_check_pressed(vk_anykey) {
switch keyboard_key {
    case vk_escape:
        game_end();
        break;
    case vk_backspace:
        if boton_foco == m_foco_zona {
            var ll = string_length(war_zona);
            if ll == 1 {
                war_zona = "";
                s_data_total();
                s_data_busqueda(4);
            }
            else if ll &gt; 1 {
                war_zona = string_copy(war_zona, 1, ll - 1);
                s_data_total();
                s_data_busqueda(4);
            }
        }
        else if boton_foco == m_foco_name {
            var ll = string_length(boton_name);
            if ll == 1 {
                boton_name = "";
            }
            else if ll &gt; 1 {
                boton_name = string_copy(boton_name, 1, ll - 1);
            }
        }
        break;
    default:
        if boton_foco == m_foco_zona {
            if string_length(war_zona) &lt; 12 {
                var c = keyboard_lastchar;
                if string_count(c, m_mask) == 1 {
                    war_zona += c;
                    s_data_total();
                    s_data_busqueda(4);
                }
            }
        }
        else if boton_foco == m_foco_name {
            if string_length(boton_name) &lt; 12 {
                var c = keyboard_lastchar;
                if string_count(c, m_mask) == 1 {
                    boton_name += c;
                }
            }
        }
        break;
} keyboard_lastchar = ''; }

} // fin

</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///comandos juego

if room == w_mundo { // inicio

s_cam_zoom(mouse_x, mouse_y);
s_cam_move(mouse_x, mouse_y, id);
if war_camfind != m_cam_find_no and clicdx == 0 and clicdy == 0 {
    if instance_exists(seleccion) {
        var ok = false;
        with seleccion {
            var cx = view_xview[0] + view_wview[0] / 2;
            var cy = view_yview[0] + view_hview[0] / 2 + 160;
            var cl = point_distance(cx, cy, x, y);
            var cd = point_direction(cx, cy, x, y);
            var v = min(cl, s_para_velocidad(id) * 2) * dlt * 2;
            view_xview[0] += lengthdir_x(v, cd);
            view_yview[0] += lengthdir_y(v, cd);
            view_xview[0] = clamp(view_xview[0], 0, room_width - view_wview[0]);
            view_yview[0] = clamp(view_yview[0], 0, room_height - view_hview[0]);
            ok = cl &lt; view_hview[0];
        }
        // camara cambia con tiempo
        if ok {
            reloj_cam -= dlt;
            if reloj_cam &lt;= 0 {
                reloj_cam = m_cam_time_s;
                if war_camfind == m_cam_find_time {
                    s_cam_cambio();
                }
            }
        }
    }
}
// mover escuchador
var cx = view_xview[0] + view_wview[0] / 2;
var cy = view_yview[0] + view_hview[0] / 2 + 160;
var altura_audio = (view_wview[0] / 768) * 300; // altura para 768 de camara
audio_listener_position(cx, cy, -altura_audio);

// seleccionar individuos
if mouse_check_button_pressed(mb_left) {
    seleccion = noone;
    if instance_exists(o_avatar) {
        var otro = instance_nearest(mouse_x, mouse_y, o_avatar);
        if otro.tipo == m_tipo_user and
                point_distance(mouse_x, mouse_y, otro.x, otro.y) &lt; 24 {
            seleccion = otro;
        }
    }
}

if keyboard_check_pressed(vk_anykey) {
    var snd = true;
    switch keyboard_key {
        case vk_escape:
            room_goto(w_menu);
            break;
        case ord('1'):
            war_dialogos++;
            if war_dialogos &gt; 2 {
                war_dialogos = 0;
            }
            break;
        case ord('2'):
            war_camdiverso = !war_camdiverso;
            break;
        case ord('3'):
            war_camfind++;
            if war_camfind &gt; 3 {
                war_camfind = 0;
            }
            reloj_cam = m_cam_time_s;
            break;
        case ord('4'):
            war_speed++;
            if war_speed &gt; 2 {
                war_speed = 0;
            }
            if war_speed &gt; 1 {
                audio_play_sound(a_corazon, 100, true);
            }
            else {
                audio_stop_sound(a_corazon);
            }
            break;
        case ord('5'):
            var fff = get_save_filename("IMAGE|*.png", "img");
            if fff == "" {
                screen_save("foto_war.png");
            }
            else {
                screen_save(fff);
                snd = false;
                audio_play_sound(a_camara, 100, false);
            }
            break;
        case ord('6'):
            modo_player = !modo_player;
            break;
        case ord('7'):
            global_gain = !global_gain;
            if global_gain {
                audio_master_gain(1);
            }
            else {
                audio_master_gain(0);
            }
            break;
        default:
            snd = false;
            break;
    }
    if snd {
        var s = audio_play_sound(a_action, 100, false);
        audio_sound_gain(s, 0.5, 0);
    }
}

} // fin

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="62">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if ds_map_find_value(async_load, "id") == http_data {
    if ds_map_find_value(async_load, "status") == 0 {
        var path = ds_map_find_value(async_load, "result");
        file_copy("data.csv", "data.txt");
        file_delete("data.csv");
        s_data_http();
        s_data_save();
        s_data_busqueda(2);
        s_data_total();
        menu_esweb = true;
        audio_play_sound(a_web, 100, false);
        alarm[0] = -1;
    }
}

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="5">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if room == w_mundo {
    ds_grid_destroy(camino);
    ds_grid_destroy(mundo);
}

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="3">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>ini_open("configuracion.ini");

ini_write_string("menu", "zona", war_zona);
ini_write_real("game", "camfind", war_camfind);
ini_write_real("game", "camdiverso", war_camdiverso);
ini_write_real("game", "speed", war_speed);
ini_write_real("game", "dialogos", war_dialogos);
ini_write_real("menu", "pelea", war_pelea);
ini_write_real("menu", "max", war_max);
ini_write_real("menu", "inicial", war_inicial);
for (var i = 4; i &gt;= 1; i--) {
    ini_write_real("menu", "gen" + string(i), war_gen[i]);
}
ini_write_real("menu", "gen0", war_gen[0]);

ini_write_string("menu", "name", boton_name);

ini_close();

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="73">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///GUI menu

if room == w_menu { // inicio

draw_sprite(d_omwekiatl, 0, room_width - 16, room_height - 16);
draw_sprite(d_separador, 0, 390, 530);

draw_set_halign(fa_left);
draw_set_valign(fa_bottom);
draw_text_colour(16, room_height - 16, boton_txt,
    c_maroon, c_maroon, c_maroon, c_maroon, 1);
draw_set_valign(fa_top);
if menu_esweb {
    draw_text_colour(16, 16, "Total Web: " + string(menu_aguja + 1) +
        " / " + string(menu_total),
        c_maroon, c_maroon, c_maroon, c_maroon, 1);
}
else {
    draw_text_colour(16, 16, "Total Loc: " + string(menu_aguja + 1) +
        " / " + string(menu_total),
        c_maroon, c_maroon, c_maroon, c_maroon, 1);
}
draw_text_colour(16, 16 + 32, "Version: " + m_version,
        c_maroon, c_maroon, c_maroon, c_maroon, 1);

draw_set_valign(fa_middle);
draw_set_halign(fa_center);
draw_text_colour(515, 240, string(war_max),
    c_black, c_black, c_black, c_black, 1);
draw_text_colour(515, 290, string(round(war_inicial * 100)) + "%",
    c_black, c_black, c_black, c_black, 1);

draw_set_valign(fa_middle);
draw_set_halign(fa_left);
var slsh = "";
if boton_foco == m_foco_name and reloj_slash &lt; 0.25 {
    slsh = "|";
}
draw_text_colour(160, 480, boton_name + slsh,
    c_black, c_black, c_black, c_black, 1);
slsh = "";
if boton_foco == m_foco_zona and reloj_slash &lt; 0.25 {
    slsh = "|";
}
draw_text_colour(490, 180, war_zona + slsh,
    c_black, c_black, c_black, c_black, 1);

draw_sprite_ext(d_zona, 0, room_width - 85, 60, 0.5, 0.5, 0, c_white, 1);

draw_sprite(d_mouse, 0, mouse_x, mouse_y);

// coordenadas mouse
/*
draw_set_halign(fa_left);
draw_set_valign(fa_top);
draw_sprite(d_boton, 24, mouse_x, mouse_y);
draw_text_colour(0, 0, string(mouse_x) + "," + string(mouse_y),
    c_black, c_black, c_black, c_black, 1);
*/

} // fin

</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///GUI juego

if room == w_mundo { // inicio

var ww = 1152;
var lienzo = surface_create(ww, ww * 0.75);
surface_set_target(lienzo);
draw_clear_alpha(c_black, 0);
var pos;
var hf = ww * 0.75 - 80;
pos[0, 0] = ww / 2 - 125; pos[0, 1] = hf; // neutral
pos[1, 0] = 0; pos[1, 1] = hf; // tierra
pos[4, 0] = ww - 250; pos[4, 1] = hf; // fuego
if war_pelea == m_pelea_dual {
    pos[2, 0] = 0; pos[2, 1] = 0; // agua
    pos[3, 0] = ww - 250; pos[3, 1] = 0; // aire
}
else {
    pos[2, 0] = ww - 250; pos[2, 1] = 0; // agua
    pos[3, 0] = 0; pos[3, 1] = 0; // aire
}
for (var i = 0; i &lt;= 4; i++) {
    if war_gen[i] {
        s_draw_ficha(pos[i, 0], pos[i, 1],
            war_stats[i, m_sta_bodega] + war_stats[i, m_sta_actual],
            war_stats[i, m_sta_die], war_stats[i, m_sta_actual],
            war_stats[i, m_sta_caza], i);
    }
}
s_draw_info(ww / 2 - 125, 0);
s_draw_comandos(0, ww * 0.75 / 2 - 192 * 0.8, 0.8);
surface_reset_target();
var e = view_wview[0] / ww;
draw_surface_ext(lienzo, view_xview[0], view_yview[0], e, e, 0, c_white, 1);
surface_free(lienzo);

} // fin

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="72">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// titulo menu

// titulo menu para quedar detras de avatar mensaje
if room == w_menu {
    draw_sprite(d_titulo, 0, room_width / 2, 16);
}

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// 3D mouse

if room == w_mundo {
    /*
    if s_mi_dir(mouse_x, mouse_y, camino) == -1 {
        draw_sprite_ext(d_puntero, 0, mouse_x, mouse_y, 1, 1, 0, c_white, 0.5);
    }
    else {
        draw_sprite(d_puntero, 0, mouse_x, mouse_y);
    }
    */
    draw_sprite(d_puntero, 0, mouse_x, mouse_y);
}

</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
