<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>d_coli3</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>origen = noone;
clan = 0;
arma = 3;
arma_plus = 1; // multiplicador cadencia
zombi = true;
reloj_fin = 1;
inspirado = false;
desarmar = false;
embestir = false;
envenenado = false;

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="1" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if arma == 4 and instance_exists(origen) {
    var aux = instance_create(x, y, o_boomerang);
    aux.origen = origen;
    aux.clan = clan;
    aux.arma_plus = arma_plus;
    aux.image_angle = image_angle;
}

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>// tiempo limite
reloj_fin -= dlt;
if reloj_fin &lt;= 0 {
    instance_destroy();
    exit;
}

// animacion
if arma == 2 {
    image_angle += 360 * dlt;
}
else if arma == 4 {
    image_angle += 720 * dlt;
}

// moverse y colisionar
var otro;
var vvv = s_para_proyvel(arma, arma_plus) * dlt;
var paso = vvv / max(1, ceil(vvv / 16));
for (var i = 0; i &lt; vvv; i += paso) {
    x += lengthdir_x(paso, direction);
    y += lengthdir_y(paso, direction);
    otro = instance_place(x, y, o_bloque);
    if otro != noone {
        if arma == 4 { // boomerang rebota
            s_audio(a_contrarbol, x, y, 1);
            direction = point_direction(otro.x, otro.y, x, y);
        }
        else {
            if arma == 3 {
                s_audio(a_contrarbol, x, y, 2);
            }
            instance_destroy();
            exit;
        }
    }
    else {
        otro = instance_place(x, y, o_avatar);
        if otro != noone {
            if s_enemy(id, otro) and otro != origen and !war_fin {
                // obtener damage
                var dmg = s_para_damage(arma, otro.ropa, otro.tool == 1, x, y);
                dmg *= random_range(0.9, 1.1);
                if zombi {
                    dmg *= 0.5;
                }
                // bonus por inspiracion
                if inspirado {
                    dmg += m_ava_inspigolpe;
                }
                // ver si embiste el pelo puntudo
                if embestir {
                    if otro.vida - dmg &gt; 0 {
                        dmg += m_ava_embestida;
                        s_audio(a_nokeo, otro.x, otro.y, 40);
                        otro.reloj_atolondra = m_ava_atolondra_s;
                        var yo = id;
                        with o_proyectil {
                            if origen == yo.origen {
                                embestir = false;
                            }
                        }
                        if instance_exists(origen) {
                            origen.embestir = false;
                            origen.reloj_embestir = m_ava_cargaembiste_s;
                        }
                    }
                }
                // aplicar damage y ver si muere
                otro.vida = max(0, otro.vida - dmg);
                if otro.vida == 0 {
                    if otro.tipo != m_tipo_elem {
                        war_stats[clan, m_sta_caza]++;
                    }
                    // triunfo
                    if instance_exists(origen) {
                        if origen.cara == 1 {
                            origen.vida = min(s_para_vida(origen),
                                origen.vida + m_ava_triunfo);
                            s_audio(a_gritovictoria, origen.x, origen.y, 35);
                        }
                    }
                    // explosion final
                    if otro.tool == 4 {
                        with instance_create(otro.x, otro.y, o_explosion) {
                            clan = otro.clan;
                        }
                    }
                    s_morir(otro);
                }
                else {
                    s_advertir(otro, origen, id);
                    s_auch(otro);
                    // envenenar
                    if envenenado {
                        otro.reloj_veneno = m_ava_veneno_s;
                        otro.veneno_clan = clan;
                    }
                    // el pelo liso le quita algun objeto
                    if desarmar {
                        if s_desarme(otro) {
                            var yo = id;
                            with o_proyectil {
                                if origen == yo.origen {
                                    desarmar = false;
                                }
                            }
                            if instance_exists(origen) {
                                origen.desarmar = false;
                            }
                        }
                    }
                }
                instance_destroy();
                exit;
            }
        }
    }
}
depth = -y;

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>var pp = d_proyectil;
if inspirado {
    pp = d_proyeinspira;
}
if zombi and arma == 3 {
    draw_sprite_ext(pp, 5, x, y - m_proy_altura,
        1, 1, image_angle, c_blan[clan], 1);
}
else {
    draw_sprite_ext(pp, arma, x, y - m_proy_altura,
        1, 1, image_angle, c_blan[clan], 1);
}

</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
